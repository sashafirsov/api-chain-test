{
  "version": 3,
  "sources": ["../src/slots-light-vs-shadow.js"],
  "sourcesContent": ["/* tests are using createTestTree(node) to\n * append the node clone with\n * initiated shadowDom on template parent ( id=host )\n */\nimport { CssChain as $ } from \"./CssChain.js\";\n\n// from https://github.com/chromium/chromium/edit/main/third_party/blink/web_tests/external/wpt/shadow-dom/resources/shadow-dom.js\n// changes:\n//      * added walkLightDom() code to test $.template()\n//      * createTestTree adds the cloned transformed node to parent\n\nexport function createTestTree( node )\n{\n\n    let ids = {light:{}};\n\n    function attachShadowFromTemplate( template )\n    {\n        let parent = template.parentNode;\n        parent.removeChild( template );\n        let shadowRoot;\n        if( template.getAttribute( 'data-slot-assignment' ) === 'manual' )\n        {   /* c8 ignore next 5 */\n            shadowRoot =\n                parent.attachShadow( {\n                    mode: template.getAttribute( 'data-mode' ),\n                    slotAssignment: 'manual'\n                } );\n        }else\n        {\n            shadowRoot = parent.attachShadow(\n                { mode: template.getAttribute( 'data-mode' ) } );\n        }\n        let id = template.id;\n        /* c8 ignore next 5 */\n        if( id )\n        {\n            shadowRoot.id = id;\n            ids[ id ] = shadowRoot;\n        }\n        shadowRoot.appendChild( document.importNode( template.content, true ) );\n        return shadowRoot;\n    }\n\n    function walkShadowDom( root )\n    {   /* c8 ignore next 4 */\n        if( root.id )\n        {\n            ids[ root.id ] = root;\n        }\n        for( let e of Array.from( root.querySelectorAll( '[id]' ) ) )\n        {\n            ids[ e.id ] = e;\n        }\n        for( let e of Array.from( root.querySelectorAll( 'template' ) ) )\n        {\n            walkShadowDom( attachShadowFromTemplate( e ) );\n        }\n    }\n\n    function walkLightDom( root ) // using CssChain\n    {   if( root.id )\n            ids.light[ root.id ] = root;\n\n        $( '[id]',root ).map( e => ids.light[ e.id ] = e );\n\n        $( 'template', root )\n            .map( t =>\n            {   const p = t.parentNode;\n                p.removeChild(t);\n                $(p).template(t);\n                walkLightDom( p );\n            });\n    }\n\n    const cloneAppend = (n,classname) =>\n    {   let x = node.cloneNode( true );\n        x.id='';\n        x.classList.add(classname);\n        if( classname==='light')\n            ids.light[node.id]=x;\n        else\n            ids[node.id]=x;\n        n.parentNode.appendChild(x);\n        return x\n    };\n\n    walkShadowDom( cloneAppend( node,'shadow' ) );\n    walkLightDom( cloneAppend( node ,'light'  ) );\n\n    return ids;\n}\n\n// https://github.com/chromium/chromium/blob/main/third_party/blink/web_tests/external/wpt/shadow-dom/resources/shadow-dom.js#L1\nexport function removeWhiteSpaceOnlyTextNodes(node)\n{\n    for (var i = 0; i < node.childNodes.length; i++) {\n        var child = node.childNodes[i];\n        if (child.nodeType === Node.TEXT_NODE && child.nodeValue.trim().length == 0) {\n            node.removeChild(child);\n            i--;\n        } else if (child.nodeType === Node.ELEMENT_NODE || child.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n            removeWhiteSpaceOnlyTextNodes(child);\n        }\n    }\n    if (node.shadowRoot) {\n        removeWhiteSpaceOnlyTextNodes(node.shadowRoot);\n    }\n}\n"],
  "mappings": "AAIA,yCAOO,+BAAyB,EAChC,CAEI,GAAI,GAAM,CAAC,MAAM,IAEjB,WAAmC,EACnC,CACI,GAAI,GAAS,EAAS,WACtB,EAAO,YAAa,GACpB,GAAI,GACJ,AAAI,EAAS,aAAc,0BAA6B,SAEpD,EACI,EAAO,aAAc,CACjB,KAAM,EAAS,aAAc,aAC7B,eAAgB,WAIxB,EAAa,EAAO,aAChB,CAAE,KAAM,EAAS,aAAc,eAEvC,GAAI,GAAK,EAAS,GAElB,MAAI,IAEA,GAAW,GAAK,EAChB,EAAK,GAAO,GAEhB,EAAW,YAAa,SAAS,WAAY,EAAS,QAAS,KACxD,EAGX,WAAwB,EACxB,CACI,AAAI,EAAK,IAEL,GAAK,EAAK,IAAO,GAErB,OAAS,KAAK,OAAM,KAAM,EAAK,iBAAkB,SAE7C,EAAK,EAAE,IAAO,EAElB,OAAS,KAAK,OAAM,KAAM,EAAK,iBAAkB,aAE7C,EAAe,EAA0B,IAIjD,WAAuB,EACvB,CAAI,AAAI,EAAK,IACL,GAAI,MAAO,EAAK,IAAO,GAE3B,EAAG,OAAO,GAAO,IAAK,GAAK,EAAI,MAAO,EAAE,IAAO,GAE/C,EAAG,WAAY,GACV,IAAK,GACN,CAAI,KAAM,GAAI,EAAE,WACZ,EAAE,YAAY,GACd,EAAE,GAAG,SAAS,GACd,EAAc,KAI1B,KAAM,GAAc,CAAC,EAAE,IACvB,CAAI,GAAI,GAAI,EAAK,UAAW,IACxB,SAAE,GAAG,GACL,EAAE,UAAU,IAAI,GAChB,AAAI,IAAY,QACZ,EAAI,MAAM,EAAK,IAAI,EAEnB,EAAI,EAAK,IAAI,EACjB,EAAE,WAAW,YAAY,GAClB,GAGX,SAAe,EAAa,EAAK,WACjC,EAAc,EAAa,EAAM,UAE1B,EAIJ,8CAAuC,EAC9C,CACI,OAAS,GAAI,EAAG,EAAI,EAAK,WAAW,OAAQ,IAAK,CAC7C,GAAI,GAAQ,EAAK,WAAW,GAC5B,AAAI,EAAM,WAAa,KAAK,WAAa,EAAM,UAAU,OAAO,QAAU,EACtE,GAAK,YAAY,GACjB,KACO,GAAM,WAAa,KAAK,cAAgB,EAAM,WAAa,KAAK,yBACvE,8BAA8B,GAGtC,AAAI,EAAK,YACL,8BAA8B,EAAK",
  "names": []
}
