{
  "version": 3,
  "sources": ["../src/PokeApi-Explorer.js"],
  "sourcesContent": ["import FetchElement from 'https://unpkg.com/slotted-element@1.1.0/fetch-element.js';\n// import { CssChain as $$ } from \"https://unpkg.com/css-chain@1/CssChain.js\";\nimport { CssChain as $$ } from \"./CssChain.js\";\n\nconst arr2str = (arr,cb, separator='') => arr.map(cb).join(separator)\n,   isImg = url => url && url.endsWith && ['png','gif','svg'].find( x=>url.endsWith(x) );\n\nwindow.customElements.define('pokemon-link-element',\n    class PokemonInfoElement extends HTMLElement\n    {\n        connectedCallback()\n        {\n            const $this = $$(this)\n            ,   $ = x => $this.$(x)\n            ,     name = $this.attr('name')\n            ,      url = $this.attr('url');\n            if( isImg(url) )\n            {\n                debugger;\n                return $this.html( `<img title=\"${ name }\" src=\"${ url }\">` );\n            }\n\n\n            $this.html(`<a href=\"${url}\">${name}</a><dl></dl>`);\n\n            $('a').on('click', async e=>\n            {   e.preventDefault();\n                if(this.loaded)\n                    return $('dl').erase(), this.loaded=0;\n                this.loaded =1;\n                const d = await ( await fetch(url) ).json();\n                $('dl').html( render(d) );\n            });\n\n            function render( d, n='' )\n            {\n                if( d === undefined || d === null || 'string' === typeof d || 'number' === typeof d )\n                {   if( isImg(d) )\n                        return `<img title=\"${n}\\n${d}\" src=\"${d}\">`;\n                    return n ? `<span><code>${ n }</code> : <val>${ d }</val></span>` : `<val>${ d }</val>`;\n                }\n                if( Array.isArray( d ))\n                    return `<fieldset><legend>${n}</legend>${  arr2str( d, render,'<hr/>' ) }</fieldset>`;\n\n                let ret = [], keys = Object.keys(d);\n                const link = ( d.name && d.url ) && isImg(d.url)\n                       ? `<img title=\"${name}\" src=\"${url}\"/>`\n                       : `<pokemon-link-element name=\"${d.name}\" url=\"${d.url}\"></pokemon-link-element> `;\n\n                if( keys.length ===2 && d.name && d.url )\n                    ret.push( link )\n                else\n                {   if( n )\n                    {   ret.push( '<fieldset>' );\n                        ret.push( `<legend>${ n }</legend>` )\n                    }\n                    for( let k in d )\n                        switch( k )\n                        {   case 'name':\n                                if( d.url )\n                                    break;\n                            case 'url':\n                                d.url && d.name && ret.push( link ); break;\n                            default:\n                                if( Array.isArray( d[ k ] ) )\n                                    ret.push( `<fieldset><legend>${ k }</legend>${\n                                        arr2str( d[ k ], v=>render(v),'<hr/>' )\n                                    }</fieldset>` );\n                                else\n                                    ret.push( render( d[ k ], k ) );\n                        }\n                    n && ret.push( '</fieldset>' );\n                }\n                return ret.join('')\n            }\n        }\n\n    });\n\n\nwindow.customElements.define('pokemon-info-element',\n    class PokemonInfoElement extends FetchElement\n    {\n        render(pokemon)\n        {\n            const { other, versions, ...sprites } = pokemon.sprites;\n            const renderCollection = (title, obj) =>  `<fieldset><legend>${title}</legend>\n                ${  arr2str( Object.entries(obj), ([k,v]) => !v ? ''\n                           : ('string' === typeof v\n                              ? `<img src=\"${v}\" title=\"${k}\"/>`\n                              : renderCollection(k,v) ) )\n                }</fieldset>`;\n            const renderAbilities = () =>  `<fieldset><legend>abilities</legend>\n                ${  arr2str( pokemon.abilities, a => `<a href=\"${a.ability.url}\">${a.ability.name}</a><sup>${a.slot}</sup>` )\n                }</fieldset>`;\n            const nameUrlArr = (name,arr)=>`<details><summary>${name}</summary>${\n                        arr2str(arr, a => `<pokemon-link-element url=\"${a.url}\" name=\"${a.name}\"></pokemon-link-element>` )\n                    }</details>`;\n\n\n            return `<h1>${ pokemon.name }</h1>\n                    <img src=\"${ `https://unpkg.com/pokeapi-sprites@2.0.2/sprites/pokemon/other/dream-world/${pokemon.id}.svg` }\" alt=\"\" />\n                    <div class=\"hiflex\">\n                        ${nameUrlArr('abilities',pokemon.abilities.map(a=>a.ability))}\n                        ${nameUrlArr('forms',pokemon.forms)}\n                        ${nameUrlArr('game indices',pokemon.game_indices.map(i=>i.version))}\n                        ${nameUrlArr('moves',pokemon.moves.map(i=>i.move))}\n                        ${nameUrlArr('stats',pokemon.stats.map(i=>i.stat))}\n                        ${nameUrlArr('types',pokemon.types.map(i=>i.type))}\n                        ${nameUrlArr('species',[pokemon.species])}\n                    </div>\n                    ${ renderCollection('Sprites'   ,sprites    ) }\n                    ${ renderCollection('other'     ,other      ) }\n                    ${ renderCollection('versions'  ,versions   ) }\n                    `;\n        }\n    });\n\nlet offset = 0\n,   limit = 10;\nconst getPokeList = async () =>\n    (  await\n        // fetch( '../test/pokeapi-page0.json')\n        fetch( `https://pokeapi.co/api/v2/pokemon?limit=${limit}&offset=${offset}`)\n    ).json()\n,   $ = $$()\n,   onSelected = async (p) => $$('pokemon-info-element').attr( 'src', p.url )\n,   getPokemonId = p=> ( arr=>(arr.pop(), arr.pop()) )( p.url.split('/') )\n,   getImgByPokemon = p =>`https://unpkg.com/pokeapi-sprites@2.0.2/sprites/pokemon/other/dream-world/${getPokemonId(p)}.svg`\n,   $template = $.slots('slot-select')\n,   $listContainer = $template.parent().$('dl')\n,   renderList = async()=>\n    {\n        const page = await getPokeList();\n\n        $listContainer.erase();\n        // yield version\n\n        if( offset ) // call chain with callbacks version\n            $listContainer.append(\n                $template.clone( page.results, (cloned, p,i)=>\n                $$(cloned)\n                    .prop('hidden', false )\n                    .prop('checked', !i, 'input')\n                    .prop('src', getImgByPokemon( p ), 'img')\n                    .on('click', ()=>onSelected(p) )\n                    .slots( 'index', ''+(offset + i) )\n                    .slots( 'name', p.name ) ) );\n        else // same without call chain, just as show case of HTMLElement API in CssChain\n            page.results.forEach( (p,i)=>\n            {\n                const $c = $template.clone();\n                $c.hidden = false;\n                $c.$('input').checked = !i;\n                $c.slots( 'index' ).innerText = ''+(offset + i);\n                $c.slots( 'name' ).innerText = p.name;\n                $c.on('click', ()=>onSelected(p) )\n                $c.$('img').src = getImgByPokemon( p );\n                $listContainer.append($c);\n            });\n\n        onSelected( page.results[0] );\n\n        prevBtn.disabled = offset <= 0;\n        nextBtn.disabled = offset+limit >= page.count;\n        return page;\n    };\n$template.remove();\nconst firstPage = await renderList()\n$.slots('counter').txt( firstPage.count );\nprevBtn.onclick = ()=> renderList( offset-=limit );\nnextBtn.onclick = ()=> renderList( offset+=limit );\n"],
  "mappings": "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",
  "names": ["FetchElement", "$$", "arr2str", "arr", "cb", "separator", "isImg", "url", "x", "$this", "$", "name", "d", "render", "n", "ret", "keys", "link", "k", "v", "pokemon", "other", "versions", "sprites", "renderCollection", "title", "obj", "renderAbilities", "a", "nameUrlArr", "i", "offset", "limit", "getPokeList", "onSelected", "p", "getPokemonId", "getImgByPokemon", "$template", "$listContainer", "renderList", "page", "cloned", "$c", "firstPage"]
}
