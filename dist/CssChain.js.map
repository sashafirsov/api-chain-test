{
  "version": 3,
  "sources": ["../src/CssChain.js"],
  "sourcesContent": ["import { setProp } from './ApiChain.js';\nexport const map = (arr, ...args ) => Array.prototype.map.apply( arr, args );\nexport const csv = (arr, ...args ) => map( arr, ...args ).join(',');\n\nexport const collectionText = arr=> map(arr, e=>getNodeText(e)).join('');\nconst createEl = tag=> document.createElement(tag);\nfunction nodeProp( tag, prop, val ){ const el = createEl(tag); el[prop]=val; return el; }\nexport function isNode(n){ return !!n?.nodeType; }\n\nconst nop = ()=>''\n,   isArr = a => Array.isArray(a) || (a && 'function' === typeof a.forEach)\n,   isT = (a,t) => typeof a === t\n,   isStr  = a => isT(a, 'string')\n,   isNum  = a => isT(a, 'number')\n,   isFn   = a => isT(a, 'function')\n,   inWC   = n => n.getRootNode().host\n,   hasAssigned = n=> inWC(n) && n.assignedNodes\n,   each = (arr, cb )=> (arr.forEach(cb),arr)\n,   clear = n => hasAssigned(n)\n               ? n.assignedNodes().forEach( a => a.remove() )\n               : n.innerHTML=''\n;\n\nconst node2text =   {   1:  n=>n.assignedNodes\n                             ? collectionText(n.assignedNodes()) || collectionText(n.childNodes)\n                             : [ 'SCRIPT','AUDIO','STYLE','CANVAS','DATALIST','EMBED','OBJECT'\n                               , 'PICTURE','IFRAME','METER','NOSCRIPT'\n                               , 'SELECT','OPTGROUP','PROGRESS','TEMPLATE','VIDEO'\n                               ].includes(n.nodeName)? '' : n.innerText //collectionText(n.children)\n                    ,   3: n=>n.nodeValue\n                    ,   11:n=>collectionText(n.childNodes)\n                    };\nexport const getNodeText = n => (node2text[n.nodeType] || nop)(n);\nexport const setNodeText = ( n, val ) =>\n    hasAssigned(n)\n    ? n.assignedElements().forEach( e => e.innerText = val )\n    : n.innerText = val;\nexport const assignParent = (arr,n)=>arr.map( e=>n.appendChild(e))\nexport const collectionHtml = arr => map( arr, n=>n.assignedElements\n         ? map( n.assignedElements(), e=>e.outerHTML ).join('')\n         : n.innerHTML\n    ).join('');\n\nexport const html2NodeArr = html =>\n{   let n = createEl('div');\n    if( isNode(html) )\n        n.append( html.cloneNode(true) );\n    else if( isArr(html) )\n        each(html, e=> each( html2NodeArr(e), i=> n.appendChild(i)) )\n    else\n        n.innerHTML = html;\n    const wrapIfText = e=>{\n        if( e.nodeType !== 3 )\n            return e;\n        const n = createEl('span');\n        n.append(e);\n        return n;\n    };\n    return [...n.childNodes].map(e=>(e.remove(),e)).map(wrapIfText);\n};\n\nexport const addNodeHtml = ( n, val ) =>\n{\n    const set = ( to, v )=> ( v instanceof Node\n                            ? v.remove() || to.append(v)\n                            : html2NodeArr(v).forEach( e=>to.append(e) )\n                            )\n    ,  append = v => hasAssigned(n)\n                   ? n.assign( ...n.assignedNodes()\n                             , ...assignParent( each( html2NodeArr(v), e=>e.slot=n.name )\n                                                , n.getRootNode().host ) )\n                   : set(n,v);\n\n    val instanceof NodeList || isArr(val)\n        ? [ ...val ].forEach( append )\n        : append(val);\n}\nexport const setNodeHtml = ( n, val ) => { clear(n); addNodeHtml(n,val) };\nfunction assignedNodesLight(f)\n{   if(f?.flatten)\n    {   const r = [];\n        const flatten = n=> n.CssChainAssignedNodes ? each(n.CssChainAssignedNodes,flatten): r.push(n);\n        each(this.CssChainAssignedNodes, flatten );\n        return r;\n    }\n    return this.CssChainAssignedNodes;\n}\n\n    class\nCssChainT extends Array\n{\n    attr(...args)\n    {   if( args.length < 2 )\n            return this.getAttribute(...args);\n        let [k,v,s] = args\n        ,        $s = this.$(s);\n        if(isFn(v))\n            $s.map((n,i,arr)=>v(n,i,arr,this)).forEach((V,i)=>$s[i].setAttribute(k,V))\n        else\n            $s.setAttribute(...args);\n        return this\n    }\n    prop(...args)\n    {   if( args.length < 2 )\n            return this[0][args[0]];\n        let [k,v,s] = args\n        ,        $s = this.$(s);\n        if(isFn(v))\n            $s.map((n,i,arr)=>v(n,i,arr,this)).forEach((V,i)=>$s[i][k]=V)\n        else\n            $s.forEach( el=>el[k]=v);\n        return this\n    }\n    forEach( ...args){ Array.prototype.forEach.apply(this,args); return this }\n    map( ...args){ return map(this,...args) }\n    push(...args){ Array.prototype.push.apply(this,args); return this; }\n    querySelector(css){ return new CssChainT().push( this.querySelectorAll(css)[0] )  }\n    querySelectorAll(css){ return this.reduce( ($,el)=> $.push(...(el.shadowRoot||el).querySelectorAll(css) ), new CssChainT()) }\n    $(...args){ return args.length && args[0] ? this.querySelectorAll(...args) : this; }\n    parent(css)\n    {   const s = new Set()\n        , add = n=> s.has(n) ? 0 : (s.add(n), n)\n        , parentLoop = n=>  {   while( n=n.parentElement )\n                                    if( n.matches(css) )\n                                        return add(n);\n                            };\n        return CssChain(this.map( css ? parentLoop : n=>add(n.parentElement) ).filter(n=>n));\n    }\n    on(...args){ return this.addEventListener(...args) }\n    append(val){ return this.forEach( n=> addNodeHtml(n,val)) }\n    remove(...args)\n    {   if( !args.length )\n            {   this.forEach(el=>el.remove()); return new CssChainT() }\n        return isFn(args[1]) ? this.removeEventListener(...args) : this.map(el=>el.matches(args[0])).filter(el=>el) ;\n    }\n    erase(){ return this.forEach(n=>clear(n)) }\n    slots(...arr)\n    {\n        const selector = arr.length\n                         ? csv( arr[0].split(',')\n                                , n=> ['\"\"',\"''\"].includes(n) || !n\n                                      ? `slot:not([name])`\n                                      : `slot[name=\"${n}\"]`\n                                )\n                        : 'slot';\n        const ss = this.filter( el=>el.matches && el.matches(selector) );\n        const ret = this.filter( n => !ss.includes(n) && n.querySelector )\n                    .map( n=>n.shadowRoot || n ).$( arr.length\n                        ? csv( arr[0].split(',')\n                            , n=> ['\"\"',\"''\"].includes(n) || !n\n                                  ? `slot:not([name])`\n                                  : `slot[name=\"${n}\"]`\n                            )\n                        : 'slot');\n        if( arr.length === 2 )\n        {   ret.html( arr[ 1 ] );\n            return this\n        }\n        return CssChain([...ss,...ret]);\n    }\n    template(n)\n    {\n        if( n === undefined )\n        {\n            const $s = this.$('[slot]')\n                .forEach( n => this.$(n.slot ? `slot[name=\"${n.slot}\"]`:'slot:not([name])').length\n                               || n.parentNode.insertBefore( nodeProp('slot','name',n.slot), n ));\n            $s.remove();\n            n = createEl('template');\n            this.childNodes.forEach( c=>n.content.append(c) );\n            this.append($s);\n        }else if( isStr(n) )\n        {   n = this.$( n );\n            n.remove();\n        }\n        n = n.cloneNode(true);\n        const content = n.content ? n.content.childNodes : n;\n        const c = CssChain( content );\n        c.slots().forEach( s =>\n        {   const v = this.children.filter( n=>n.slot===s.name );\n            const p = s.parentNode;\n            s.CssChainAssignedNodes = [];\n            s.assignedNodes = s.assignedElements = assignedNodesLight;\n            const insert = (n,r)=>\n            {   const k = p.insertBefore( n, r);\n                n.CssChainAssignedSlot || s.CssChainAssignedNodes.push(n);\n                n.CssChainAssignedSlot = s;\n                return k;\n            };\n            each(v, e=>e.cssChainSlot = s);\n            const injectInSlot = (e,s)=>\n            {   if( e.tagName === 'SLOT' )\n                {   const q = e.parentNode;\n                    const r = insert(e,s);\n                    each( q.querySelectorAll(`[slot=\"${e.name}\"]`), n=> p.insertBefore( n, r) );\n                }else\n                    insert(e,s);\n            }\n            each( v, e=>injectInSlot( e, s) )\n            if( v.length ) s.hidden=true;\n        });\n        this.children.filter(e=>!e.cssChainSlot).remove();\n        this.append( CssChain( html2NodeArr('<light-dom></light-dom>') ).append(content) );\n        return this;\n    }\n    get innerText(){ return this.txt() }\n    set innerText( val ){ return this.txt( val ) }\n    txt( val, css=undefined )\n    {   const $ = this.$(css);\n        if( val === undefined )\n            return collectionText( $ );\n        $.forEach( isFn(val)\n                    ? (n,i)=>setNodeText(n,val(n,i,$,this))\n                    : n=>setNodeText(n,val) );\n        return this\n    }\n    get outerHTML(){ return this.map( e=>e.outerHTML ).join('') }\n    set outerHTML( val )\n    {   return this.forEach( (n,i,arr)=>\n        {   const p = n.parentNode;\n            html2NodeArr(isFn(val) ? val(n,i,arr): val )\n                .forEach( e=> p.insertBefore( (arr[i]=e), n));\n            n.remove();\n        })\n    }\n    get innerHTML(){ return this.html() }\n    set innerHTML( val ){ return this.html(val) }\n    html( val, css=undefined )\n    {   const arr = css? this.$(css): this;\n        if( val === undefined )\n            return collectionHtml( arr );\n        arr.forEach( isFn(val)\n               ? (n,i)=>setNodeHtml(n,val(n,i,arr))\n               : n=>setNodeHtml(n,val) );\n        return this\n    }\n    assignedElements(opts){ return CssChain([].concat( ...this.map( el=>el.assignedElements ? el.assignedElements(opts):[] ) ) ) }\n    assignedNodes(f){ return CssChain([].concat( ...this.map( el=>el.assignedNodes ? el.assignedNodes(f):[] ) ) ) }\n    cloneNode(...args){ return this.map( el=>el.cloneNode && el.cloneNode(...args) ) }\n    clone( /* number|array */count=1, cb=undefined )\n    {\n        let arr = count;\n        if( isNum(count) )\n            arr = Array.from({length: count}, (v, i) => i);\n\n        if( isArr(arr) )\n        {   const ret = [];\n            this.forEach( n => arr.forEach( (d,i) =>\n            {   const m = n.ownerDocument.importNode(n,true)\n                ,     x = cb && cb( m, d, i, arr );\n                isStr(x)\n                ? ret.push( ...html2NodeArr(x) )\n                : isArr(x)\n                    ? ret.push(...x)\n                    : ret.push( isNode(x) ? x : m )\n            }));\n            return CssChain( ret );\n        }\n        const doc = count;\n        return this.map( el=> doc? doc.importNode( el,true ): el.cloneNode ? el.cloneNode(true):Object.assign({},el) )\n    }\n    get firstElementChild(){ return CssChain(this.map( n=>n.firstElementChild).filter(n=>n)) }\n    get firstChild(){ return CssChain(this.map( n=>n.firstChild).filter(n=>n)) }\n    get childNodes(){ return CssChain([].concat( ...map( this, el=>[...(el.childNodes || [] )] ) ) ) }\n    get children(){ return CssChain([].concat( ...map( this, el=>[...(el.children || [] )] ) ) ) }\n}\n\nconst appliedTypes = new Set()\n,     OBJ_prototype = Object.getPrototypeOf( {} );\n\n    export function\napplyPrototype( nodeOrTag, ApiChain )\n{   const node = isStr(nodeOrTag) ? createEl(nodeOrTag) : nodeOrTag;\n    if( appliedTypes.has(node.tagName) )\n        return;\n    appliedTypes.add( node.tagName );\n\n    for( let k in node )\n        if( !( k in ApiChain.prototype ) )\n            setProp( node, k, ApiChain );\n\n    for ( let proto; (proto= Object.getPrototypeOf(node)) !== OBJ_prototype && proto != null && !appliedTypes.has(proto)  ; )\n    {   appliedTypes.add(proto);\n        for( let k of Object.getOwnPropertyNames(proto) )\n            if( !( k in ApiChain.prototype ) )\n                setProp( node, k, ApiChain );\n    }\n}\nObject.getOwnPropertyNames(window)\n    .filter(key => key.startsWith('HTML') && key.endsWith('Element')&& key.length > 11 )\n    .map( key=>key.substring(4,key.length-7).toLowerCase() )\n    .forEach( tag=>applyPrototype( createEl(tag), CssChainT ) );\n\n    export function\nCssChain( css, el=document, protoArr=[] )\n{\n    const arr = 'string'===typeof css\n                ? (el.shadowRoot || el).querySelectorAll( css )\n                : isArr(css) ? css : [css? css.shadowRoot || css : document];\n\n    if( isArr( protoArr ) )\n    {   if( !protoArr.length )\n            protoArr = [...arr].slice(0,256);\n    }else\n        protoArr = [ protoArr ];\n\n    protoArr.forEach( el => applyPrototype(el,CssChainT) );\n    const ret = new CssChainT();\n    ret.push(...arr);\n    return ret;\n}\nexport default CssChain;\n"],
  "mappings": "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",
  "names": ["setProp", "arr", "args", "createEl", "tag", "nodeProp", "prop", "val", "el", "n", "nop", "isArr", "a", "isT", "t", "isStr", "isNum", "isFn", "inWC", "hasAssigned", "each", "cb", "clear", "node2text", "e", "html", "i", "wrapIfText", "set", "to", "v", "append", "assignedNodesLight", "f", "r", "flatten", "CssChainT", "k", "s", "$s", "V", "css", "$", "add", "parentLoop", "selector", "ss", "ret", "c", "content", "p", "insert", "injectInSlot", "q", "opts", "count", "d", "m", "x", "doc", "appliedTypes", "OBJ_prototype", "nodeOrTag", "ApiChain", "node", "proto", "key", "protoArr"]
}
